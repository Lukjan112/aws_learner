service: aws-learner

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: dev
  provider:
  memorySize: 128
  timeout: 5
  endpointType: regional
  environment:
    REGION: eu-central-1
    SETS_TABLE: ${self:service}-sets-${opt:stage, self:provider.stage}
    USERS_TABLE: ${self:service}-users-${opt:stage, self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.SETS_TABLE}'
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}'

functions:
  add-set:
    handler: api/sets/addSet.handler
    description: POST /set
    events:
      - http:
          path: set
          method: post
          request:
            schema:
              application/json: ${file(models/setModel.json)}

  update-set:
    handler: api/sets/updateSet.handler
    description: PATCH /set
    events:
      - http:
          path: set
          method: patch
          request:
            schema:
              application/json: ${file(models/setModel.json)}

  get-set:
    handler: api/sets/getSet.handler
    description: GET /set/
    events:
      - http:
          path: set/{set_id}
          method: get

  delete-set:
    handler: api/sets/deleteSet.handler
    description: DELETE /set/
    events:
      - http:
          path: set/{set_id}
          method: delete

  get-sets:
    handler: api/sets/getSets.handler
    description: GET /sets/
    events:
      - http:
          path: sets/
          method: get

resources:
  Resources:
    LearnerSetsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.SETS_TABLE}
        AttributeDefinitions:
          - AttributeName: set_id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: set_id
            KeyType: HASH
          - AttributeName: user_id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: user_id-index
            KeySchema:
              - AttributeName: user_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

    LearnerUsersTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
